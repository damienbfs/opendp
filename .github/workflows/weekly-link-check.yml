name: Weekly link check

# on:
#   push:
#     branches:
#       - main
#       - release/*
#   pull_request:

jobs:
  # rust-build-and-test:
  #   runs-on: ubuntu-22.04
  #   defaults:
  #     run:
  #       working-directory: rust
  #   env:
  #     CARGO_TERM_COLOR: always
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3

  #     - name: Cache Rust dependencies
  #       uses: actions/cache@v3
  #       with:
  #         path: |
  #           ~/.cargo/registry
  #           ~/.cargo/git
  #           rust/target
  #         key: ${{ runner.os }}-cargo-${{ hashFiles('rust/Cargo.toml') }}
  #         restore-keys: ${{ runner.os }}-cargo-

  #     - name: Build
  #       run: cargo build --verbose --features untrusted,bindings-python
      
  #     - name: Check --no-default-features
  #       run: cargo check --verbose --no-default-features --features untrusted,ffi

  #     - name: Test
  #       run: cargo test --verbose --features untrusted,ffi

  #     - name: Upload libs
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: libs
  #         path: rust/target/debug/libopendp.so

  check-links:
    # needs: rust-build-and-test
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: docs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9

      - name: Install Pandoc
        run: sudo apt-get install -y pandoc

      - name: Install deps
        run: python -m pip install -r requirements.txt

      - name: Build docs
        run: make html

      - name: Check links
        run: linkchecker -f linkchecker-external.cfg build/html/index.html

    needs: rust-build-and-test
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: docs
    strategy:
      matrix:
        python-version: [3.8]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get pip cache dir
        id: pip-cache
        run: echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('python/setup.cfg') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest nbmake pytest-xdist
          python -m pip install -r requirements_notebooks.txt

      - name: Download libs
        uses: actions/download-artifact@v3
        with:
          name: libs
          path: python/src/opendp/lib

      - name: Install package
        run: (cd ../python && python -m pip install -e .)

      - name: Test
        run: |
          shopt -s globstar
          pytest --nbmake source/**/*.ipynb -n=auto
